// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collector.proto

package api_v2

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	model "github.com/jaegertracing/jaeger/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostSpansRequest struct {
	Batch                *model.Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PostSpansRequest) Reset()         { *m = PostSpansRequest{} }
func (m *PostSpansRequest) String() string { return proto.CompactTextString(m) }
func (*PostSpansRequest) ProtoMessage()    {}
func (*PostSpansRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{0}
}

func (m *PostSpansRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostSpansRequest.Unmarshal(m, b)
}
func (m *PostSpansRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostSpansRequest.Marshal(b, m, deterministic)
}
func (m *PostSpansRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostSpansRequest.Merge(m, src)
}
func (m *PostSpansRequest) XXX_Size() int {
	return xxx_messageInfo_PostSpansRequest.Size(m)
}
func (m *PostSpansRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostSpansRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostSpansRequest proto.InternalMessageInfo

func (m *PostSpansRequest) GetBatch() *model.Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

type PostSpansResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostSpansResponse) Reset()         { *m = PostSpansResponse{} }
func (m *PostSpansResponse) String() string { return proto.CompactTextString(m) }
func (*PostSpansResponse) ProtoMessage()    {}
func (*PostSpansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{1}
}

func (m *PostSpansResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostSpansResponse.Unmarshal(m, b)
}
func (m *PostSpansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostSpansResponse.Marshal(b, m, deterministic)
}
func (m *PostSpansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostSpansResponse.Merge(m, src)
}
func (m *PostSpansResponse) XXX_Size() int {
	return xxx_messageInfo_PostSpansResponse.Size(m)
}
func (m *PostSpansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostSpansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostSpansResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PostSpansRequest)(nil), "jaeger.api_v2.PostSpansRequest")
	proto.RegisterType((*PostSpansResponse)(nil), "jaeger.api_v2.PostSpansResponse")
}

func init() { proto.RegisterFile("collector.proto", fileDescriptor_9305884a292fdf82) }

var fileDescriptor_9305884a292fdf82 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x31, 0x4f, 0xc2, 0x40,
	0x14, 0xc7, 0x3d, 0x14, 0x12, 0x8f, 0x10, 0xb1, 0x92, 0x48, 0x88, 0x29, 0xa4, 0x8b, 0x86, 0x48,
	0x0f, 0x6b, 0x5c, 0xd8, 0xa8, 0x2e, 0x3a, 0x11, 0xd8, 0x5c, 0xcc, 0x51, 0x2f, 0xd7, 0x9a, 0x72,
	0xef, 0xbc, 0x3b, 0xea, 0xe2, 0xe4, 0x47, 0xd0, 0x2f, 0xe4, 0xc8, 0x68, 0xe2, 0x6e, 0x0c, 0xfa,
	0x41, 0x0c, 0x6d, 0x35, 0x82, 0x71, 0x7a, 0xef, 0xee, 0xff, 0xcb, 0xff, 0xfd, 0xdf, 0xc3, 0x5b,
	0x01, 0xc4, 0x31, 0x0b, 0x0c, 0x28, 0x57, 0x2a, 0x30, 0x60, 0x55, 0x6e, 0x28, 0xe3, 0x4c, 0xb9,
	0x54, 0x46, 0x57, 0x89, 0xd7, 0x28, 0x4f, 0xe0, 0x9a, 0xc5, 0x99, 0xd6, 0xa8, 0x71, 0xe0, 0x90,
	0xb6, 0x64, 0xd1, 0xe5, 0xbf, 0x7b, 0x1c, 0x80, 0xc7, 0x8c, 0x50, 0x19, 0x11, 0x2a, 0x04, 0x18,
	0x6a, 0x22, 0x10, 0x3a, 0x57, 0x0f, 0xd3, 0x12, 0x74, 0x38, 0x13, 0x1d, 0x7d, 0x47, 0x39, 0x67,
	0x8a, 0x80, 0x4c, 0x89, 0xbf, 0xb4, 0x73, 0x86, 0xab, 0x03, 0xd0, 0x66, 0x24, 0xa9, 0xd0, 0x43,
	0x76, 0x3b, 0x65, 0xda, 0x58, 0x5d, 0x5c, 0x1c, 0x53, 0x13, 0x84, 0x75, 0xd4, 0x42, 0x07, 0x65,
	0xaf, 0xe6, 0x2e, 0x25, 0x74, 0xfd, 0x85, 0xe6, 0x6f, 0xcc, 0xde, 0x9a, 0x6b, 0xc3, 0x0c, 0x74,
	0x76, 0xf0, 0xf6, 0x2f, 0x17, 0x2d, 0x41, 0x68, 0xe6, 0xdd, 0xe3, 0xea, 0xe9, 0xf7, 0xae, 0x23,
	0xa6, 0x92, 0x28, 0x60, 0x56, 0x88, 0x37, 0x7f, 0x40, 0xab, 0xb9, 0x62, 0xbc, 0x1a, 0xa4, 0xd1,
	0xfa, 0x1f, 0xc8, 0x66, 0x38, 0xf5, 0x87, 0xd7, 0xcf, 0xa7, 0x82, 0xe5, 0x54, 0xd2, 0x63, 0x24,
	0x1e, 0xd1, 0x0b, 0xb9, 0x87, 0xda, 0x7e, 0xf2, 0xd8, 0xf7, 0xad, 0xa2, 0xb7, 0x7e, 0xe4, 0x76,
	0xdb, 0x05, 0x54, 0x50, 0x27, 0x18, 0x5f, 0xa4, 0x66, 0xad, 0xfe, 0xe0, 0xdc, 0xda, 0x0f, 0x8d,
	0x91, 0xba, 0x47, 0x08, 0x8f, 0x4c, 0x38, 0x1d, 0xbb, 0x01, 0x4c, 0x48, 0x36, 0xcb, 0x28, 0x1a,
	0x44, 0x82, 0xe7, 0xaf, 0xd9, 0xdc, 0x46, 0x2f, 0x73, 0x1b, 0xbd, 0xcf, 0x6d, 0xf4, 0xfc, 0x61,
	0x23, 0xbc, 0x1b, 0x81, 0xbb, 0x04, 0xe6, 0xd9, 0x2e, 0x4b, 0x59, 0x1d, 0x97, 0xd2, 0xbb, 0x1e,
	0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x69, 0xe8, 0xca, 0x55, 0xe8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectorServiceClient is the client API for CollectorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectorServiceClient interface {
	PostSpans(ctx context.Context, in *PostSpansRequest, opts ...grpc.CallOption) (*PostSpansResponse, error)
}

type collectorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCollectorServiceClient(cc *grpc.ClientConn) CollectorServiceClient {
	return &collectorServiceClient{cc}
}

func (c *collectorServiceClient) PostSpans(ctx context.Context, in *PostSpansRequest, opts ...grpc.CallOption) (*PostSpansResponse, error) {
	out := new(PostSpansResponse)
	err := c.cc.Invoke(ctx, "/jaeger.api_v2.CollectorService/PostSpans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectorServiceServer is the server API for CollectorService service.
type CollectorServiceServer interface {
	PostSpans(context.Context, *PostSpansRequest) (*PostSpansResponse, error)
}

// UnimplementedCollectorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollectorServiceServer struct {
}

func (*UnimplementedCollectorServiceServer) PostSpans(ctx context.Context, req *PostSpansRequest) (*PostSpansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostSpans not implemented")
}

func RegisterCollectorServiceServer(s *grpc.Server, srv CollectorServiceServer) {
	s.RegisterService(&_CollectorService_serviceDesc, srv)
}

func _CollectorService_PostSpans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostSpansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServiceServer).PostSpans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jaeger.api_v2.CollectorService/PostSpans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServiceServer).PostSpans(ctx, req.(*PostSpansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jaeger.api_v2.CollectorService",
	HandlerType: (*CollectorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostSpans",
			Handler:    _CollectorService_PostSpans_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collector.proto",
}
