// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query.proto

package api_v2

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	model "github.com/jaegertracing/jaeger/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTraceRequest struct {
	TraceId              []byte   `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTraceRequest) Reset()         { *m = GetTraceRequest{} }
func (m *GetTraceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTraceRequest) ProtoMessage()    {}
func (*GetTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{0}
}

func (m *GetTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTraceRequest.Unmarshal(m, b)
}
func (m *GetTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTraceRequest.Marshal(b, m, deterministic)
}
func (m *GetTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTraceRequest.Merge(m, src)
}
func (m *GetTraceRequest) XXX_Size() int {
	return xxx_messageInfo_GetTraceRequest.Size(m)
}
func (m *GetTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTraceRequest proto.InternalMessageInfo

func (m *GetTraceRequest) GetTraceId() []byte {
	if m != nil {
		return m.TraceId
	}
	return nil
}

type SpansResponseChunk struct {
	Spans                []*model.Span `protobuf:"bytes,1,rep,name=spans,proto3" json:"spans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SpansResponseChunk) Reset()         { *m = SpansResponseChunk{} }
func (m *SpansResponseChunk) String() string { return proto.CompactTextString(m) }
func (*SpansResponseChunk) ProtoMessage()    {}
func (*SpansResponseChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{1}
}

func (m *SpansResponseChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpansResponseChunk.Unmarshal(m, b)
}
func (m *SpansResponseChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpansResponseChunk.Marshal(b, m, deterministic)
}
func (m *SpansResponseChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpansResponseChunk.Merge(m, src)
}
func (m *SpansResponseChunk) XXX_Size() int {
	return xxx_messageInfo_SpansResponseChunk.Size(m)
}
func (m *SpansResponseChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_SpansResponseChunk.DiscardUnknown(m)
}

var xxx_messageInfo_SpansResponseChunk proto.InternalMessageInfo

func (m *SpansResponseChunk) GetSpans() []*model.Span {
	if m != nil {
		return m.Spans
	}
	return nil
}

type ArchiveTraceRequest struct {
	TraceId              []byte   `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveTraceRequest) Reset()         { *m = ArchiveTraceRequest{} }
func (m *ArchiveTraceRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveTraceRequest) ProtoMessage()    {}
func (*ArchiveTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{2}
}

func (m *ArchiveTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveTraceRequest.Unmarshal(m, b)
}
func (m *ArchiveTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveTraceRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveTraceRequest.Merge(m, src)
}
func (m *ArchiveTraceRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveTraceRequest.Size(m)
}
func (m *ArchiveTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveTraceRequest proto.InternalMessageInfo

func (m *ArchiveTraceRequest) GetTraceId() []byte {
	if m != nil {
		return m.TraceId
	}
	return nil
}

type ArchiveTraceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveTraceResponse) Reset()         { *m = ArchiveTraceResponse{} }
func (m *ArchiveTraceResponse) String() string { return proto.CompactTextString(m) }
func (*ArchiveTraceResponse) ProtoMessage()    {}
func (*ArchiveTraceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{3}
}

func (m *ArchiveTraceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveTraceResponse.Unmarshal(m, b)
}
func (m *ArchiveTraceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveTraceResponse.Marshal(b, m, deterministic)
}
func (m *ArchiveTraceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveTraceResponse.Merge(m, src)
}
func (m *ArchiveTraceResponse) XXX_Size() int {
	return xxx_messageInfo_ArchiveTraceResponse.Size(m)
}
func (m *ArchiveTraceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveTraceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveTraceResponse proto.InternalMessageInfo

type TraceQueryParameters struct {
	ServiceName          string            `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	OperationName        string            `protobuf:"bytes,2,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StartTimeMin         *types.Timestamp  `protobuf:"bytes,4,opt,name=start_time_min,json=startTimeMin,proto3" json:"start_time_min,omitempty"`
	StartTimeMax         *types.Timestamp  `protobuf:"bytes,5,opt,name=start_time_max,json=startTimeMax,proto3" json:"start_time_max,omitempty"`
	DurationMin          *types.Duration   `protobuf:"bytes,6,opt,name=duration_min,json=durationMin,proto3" json:"duration_min,omitempty"`
	DurationMax          *types.Duration   `protobuf:"bytes,7,opt,name=duration_max,json=durationMax,proto3" json:"duration_max,omitempty"`
	SearchDepth          int32             `protobuf:"varint,8,opt,name=search_depth,json=searchDepth,proto3" json:"search_depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TraceQueryParameters) Reset()         { *m = TraceQueryParameters{} }
func (m *TraceQueryParameters) String() string { return proto.CompactTextString(m) }
func (*TraceQueryParameters) ProtoMessage()    {}
func (*TraceQueryParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{4}
}

func (m *TraceQueryParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceQueryParameters.Unmarshal(m, b)
}
func (m *TraceQueryParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceQueryParameters.Marshal(b, m, deterministic)
}
func (m *TraceQueryParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceQueryParameters.Merge(m, src)
}
func (m *TraceQueryParameters) XXX_Size() int {
	return xxx_messageInfo_TraceQueryParameters.Size(m)
}
func (m *TraceQueryParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceQueryParameters.DiscardUnknown(m)
}

var xxx_messageInfo_TraceQueryParameters proto.InternalMessageInfo

func (m *TraceQueryParameters) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *TraceQueryParameters) GetOperationName() string {
	if m != nil {
		return m.OperationName
	}
	return ""
}

func (m *TraceQueryParameters) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TraceQueryParameters) GetStartTimeMin() *types.Timestamp {
	if m != nil {
		return m.StartTimeMin
	}
	return nil
}

func (m *TraceQueryParameters) GetStartTimeMax() *types.Timestamp {
	if m != nil {
		return m.StartTimeMax
	}
	return nil
}

func (m *TraceQueryParameters) GetDurationMin() *types.Duration {
	if m != nil {
		return m.DurationMin
	}
	return nil
}

func (m *TraceQueryParameters) GetDurationMax() *types.Duration {
	if m != nil {
		return m.DurationMax
	}
	return nil
}

func (m *TraceQueryParameters) GetSearchDepth() int32 {
	if m != nil {
		return m.SearchDepth
	}
	return 0
}

type FindTracesRequest struct {
	Query                *TraceQueryParameters `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FindTracesRequest) Reset()         { *m = FindTracesRequest{} }
func (m *FindTracesRequest) String() string { return proto.CompactTextString(m) }
func (*FindTracesRequest) ProtoMessage()    {}
func (*FindTracesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{5}
}

func (m *FindTracesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindTracesRequest.Unmarshal(m, b)
}
func (m *FindTracesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindTracesRequest.Marshal(b, m, deterministic)
}
func (m *FindTracesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindTracesRequest.Merge(m, src)
}
func (m *FindTracesRequest) XXX_Size() int {
	return xxx_messageInfo_FindTracesRequest.Size(m)
}
func (m *FindTracesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindTracesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindTracesRequest proto.InternalMessageInfo

func (m *FindTracesRequest) GetQuery() *TraceQueryParameters {
	if m != nil {
		return m.Query
	}
	return nil
}

type GetServicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesRequest) Reset()         { *m = GetServicesRequest{} }
func (m *GetServicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetServicesRequest) ProtoMessage()    {}
func (*GetServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{6}
}

func (m *GetServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesRequest.Unmarshal(m, b)
}
func (m *GetServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesRequest.Marshal(b, m, deterministic)
}
func (m *GetServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesRequest.Merge(m, src)
}
func (m *GetServicesRequest) XXX_Size() int {
	return xxx_messageInfo_GetServicesRequest.Size(m)
}
func (m *GetServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesRequest proto.InternalMessageInfo

type GetServicesResponse struct {
	Services             []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesResponse) Reset()         { *m = GetServicesResponse{} }
func (m *GetServicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetServicesResponse) ProtoMessage()    {}
func (*GetServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{7}
}

func (m *GetServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesResponse.Unmarshal(m, b)
}
func (m *GetServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesResponse.Marshal(b, m, deterministic)
}
func (m *GetServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesResponse.Merge(m, src)
}
func (m *GetServicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetServicesResponse.Size(m)
}
func (m *GetServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesResponse proto.InternalMessageInfo

func (m *GetServicesResponse) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type GetOperationsRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SpanKind             string   `protobuf:"bytes,2,opt,name=span_kind,json=spanKind,proto3" json:"span_kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOperationsRequest) Reset()         { *m = GetOperationsRequest{} }
func (m *GetOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetOperationsRequest) ProtoMessage()    {}
func (*GetOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{8}
}

func (m *GetOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOperationsRequest.Unmarshal(m, b)
}
func (m *GetOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOperationsRequest.Marshal(b, m, deterministic)
}
func (m *GetOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOperationsRequest.Merge(m, src)
}
func (m *GetOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetOperationsRequest.Size(m)
}
func (m *GetOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOperationsRequest proto.InternalMessageInfo

func (m *GetOperationsRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *GetOperationsRequest) GetSpanKind() string {
	if m != nil {
		return m.SpanKind
	}
	return ""
}

type Operation struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SpanKind             string   `protobuf:"bytes,2,opt,name=span_kind,json=spanKind,proto3" json:"span_kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{9}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Operation) GetSpanKind() string {
	if m != nil {
		return m.SpanKind
	}
	return ""
}

type GetOperationsResponse struct {
	OperationNames       []string     `protobuf:"bytes,1,rep,name=operationNames,proto3" json:"operationNames,omitempty"`
	Operations           []*Operation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetOperationsResponse) Reset()         { *m = GetOperationsResponse{} }
func (m *GetOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetOperationsResponse) ProtoMessage()    {}
func (*GetOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{10}
}

func (m *GetOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOperationsResponse.Unmarshal(m, b)
}
func (m *GetOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOperationsResponse.Marshal(b, m, deterministic)
}
func (m *GetOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOperationsResponse.Merge(m, src)
}
func (m *GetOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetOperationsResponse.Size(m)
}
func (m *GetOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOperationsResponse proto.InternalMessageInfo

func (m *GetOperationsResponse) GetOperationNames() []string {
	if m != nil {
		return m.OperationNames
	}
	return nil
}

func (m *GetOperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type GetDependenciesRequest struct {
	StartTime            *types.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *types.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetDependenciesRequest) Reset()         { *m = GetDependenciesRequest{} }
func (m *GetDependenciesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDependenciesRequest) ProtoMessage()    {}
func (*GetDependenciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{11}
}

func (m *GetDependenciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDependenciesRequest.Unmarshal(m, b)
}
func (m *GetDependenciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDependenciesRequest.Marshal(b, m, deterministic)
}
func (m *GetDependenciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDependenciesRequest.Merge(m, src)
}
func (m *GetDependenciesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDependenciesRequest.Size(m)
}
func (m *GetDependenciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDependenciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDependenciesRequest proto.InternalMessageInfo

func (m *GetDependenciesRequest) GetStartTime() *types.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *GetDependenciesRequest) GetEndTime() *types.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type GetDependenciesResponse struct {
	Dependencies         []*model.DependencyLink `protobuf:"bytes,1,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetDependenciesResponse) Reset()         { *m = GetDependenciesResponse{} }
func (m *GetDependenciesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDependenciesResponse) ProtoMessage()    {}
func (*GetDependenciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{12}
}

func (m *GetDependenciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDependenciesResponse.Unmarshal(m, b)
}
func (m *GetDependenciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDependenciesResponse.Marshal(b, m, deterministic)
}
func (m *GetDependenciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDependenciesResponse.Merge(m, src)
}
func (m *GetDependenciesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDependenciesResponse.Size(m)
}
func (m *GetDependenciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDependenciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDependenciesResponse proto.InternalMessageInfo

func (m *GetDependenciesResponse) GetDependencies() []*model.DependencyLink {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func init() {
	proto.RegisterType((*GetTraceRequest)(nil), "jaeger.api_v2.GetTraceRequest")
	proto.RegisterType((*SpansResponseChunk)(nil), "jaeger.api_v2.SpansResponseChunk")
	proto.RegisterType((*ArchiveTraceRequest)(nil), "jaeger.api_v2.ArchiveTraceRequest")
	proto.RegisterType((*ArchiveTraceResponse)(nil), "jaeger.api_v2.ArchiveTraceResponse")
	proto.RegisterType((*TraceQueryParameters)(nil), "jaeger.api_v2.TraceQueryParameters")
	proto.RegisterMapType((map[string]string)(nil), "jaeger.api_v2.TraceQueryParameters.TagsEntry")
	proto.RegisterType((*FindTracesRequest)(nil), "jaeger.api_v2.FindTracesRequest")
	proto.RegisterType((*GetServicesRequest)(nil), "jaeger.api_v2.GetServicesRequest")
	proto.RegisterType((*GetServicesResponse)(nil), "jaeger.api_v2.GetServicesResponse")
	proto.RegisterType((*GetOperationsRequest)(nil), "jaeger.api_v2.GetOperationsRequest")
	proto.RegisterType((*Operation)(nil), "jaeger.api_v2.Operation")
	proto.RegisterType((*GetOperationsResponse)(nil), "jaeger.api_v2.GetOperationsResponse")
	proto.RegisterType((*GetDependenciesRequest)(nil), "jaeger.api_v2.GetDependenciesRequest")
	proto.RegisterType((*GetDependenciesResponse)(nil), "jaeger.api_v2.GetDependenciesResponse")
}

func init() { proto.RegisterFile("query.proto", fileDescriptor_5c6ac9b241082464) }

var fileDescriptor_5c6ac9b241082464 = []byte{
	// 1015 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0x47, 0x4e, 0x1c, 0xdb, 0x4f, 0x76, 0x4b, 0xd7, 0x4e, 0x2b, 0x54, 0xb0, 0x1d, 0x85, 0x96,
	0x4c, 0x87, 0x48, 0xa9, 0x19, 0x86, 0x92, 0x61, 0x06, 0xe2, 0xa6, 0xf5, 0xa4, 0xd0, 0x52, 0xd4,
	0x9c, 0xe0, 0xe0, 0xd9, 0x58, 0x8b, 0x2c, 0x1c, 0xaf, 0x54, 0x69, 0xed, 0xc6, 0xc3, 0x70, 0xe1,
	0x13, 0x30, 0x70, 0xe1, 0xc4, 0x95, 0x13, 0xdf, 0x81, 0x63, 0x8f, 0xcc, 0x70, 0xe3, 0x10, 0x98,
	0xc0, 0x07, 0x61, 0xf6, 0x8f, 0x1c, 0x5b, 0xce, 0xa4, 0xa1, 0x07, 0x4e, 0xde, 0x7d, 0xfb, 0xde,
	0xef, 0xfd, 0xfb, 0xbd, 0x67, 0x81, 0xfe, 0x74, 0x44, 0xe2, 0x89, 0x1d, 0xc5, 0x21, 0x0b, 0x51,
	0xe5, 0x2b, 0x4c, 0x7c, 0x12, 0xdb, 0x38, 0x0a, 0xba, 0xe3, 0x96, 0xa9, 0x0f, 0x43, 0x8f, 0x1c,
	0xca, 0x37, 0xb3, 0xe6, 0x87, 0x7e, 0x28, 0x8e, 0x0e, 0x3f, 0x29, 0xe9, 0xeb, 0x7e, 0x18, 0xfa,
	0x87, 0xc4, 0xc1, 0x51, 0xe0, 0x60, 0x4a, 0x43, 0x86, 0x59, 0x10, 0xd2, 0x44, 0xbd, 0x36, 0xd4,
	0xab, 0xb8, 0x1d, 0x8c, 0xbe, 0x74, 0x58, 0x30, 0x24, 0x09, 0xc3, 0xc3, 0x48, 0x29, 0xd4, 0xb3,
	0x0a, 0xde, 0x28, 0x16, 0x08, 0xea, 0xfd, 0x6d, 0xf1, 0xd3, 0xdb, 0xf4, 0x09, 0xdd, 0x4c, 0x9e,
	0x61, 0xdf, 0x27, 0xb1, 0x13, 0x46, 0xc2, 0xc5, 0xa2, 0x3b, 0x8b, 0xc2, 0xe5, 0x0e, 0x61, 0xfb,
	0x31, 0xee, 0x11, 0x97, 0x3c, 0x1d, 0x91, 0x84, 0xa1, 0x2f, 0xa0, 0xc8, 0xf8, 0xbd, 0x1b, 0x78,
	0x86, 0xd6, 0xd4, 0x36, 0xca, 0xed, 0x8f, 0x9e, 0x1f, 0x37, 0x5e, 0xf9, 0xe3, 0xb8, 0xb1, 0xe9,
	0x07, 0xac, 0x3f, 0x3a, 0xb0, 0x7b, 0xe1, 0xd0, 0x91, 0x69, 0x73, 0xc5, 0x80, 0xfa, 0xea, 0xe6,
	0xc8, 0xe4, 0x05, 0xda, 0xde, 0xee, 0xc9, 0x71, 0xa3, 0xa0, 0x8e, 0x6e, 0x41, 0x20, 0xee, 0x79,
	0xd6, 0x3d, 0x40, 0x4f, 0x22, 0x4c, 0x13, 0x97, 0x24, 0x51, 0x48, 0x13, 0x72, 0xb7, 0x3f, 0xa2,
	0x03, 0xe4, 0x40, 0x3e, 0xe1, 0x52, 0x43, 0x6b, 0x2e, 0x6d, 0xe8, 0xad, 0xaa, 0x3d, 0x57, 0x54,
	0x9b, 0x5b, 0xb4, 0x97, 0x79, 0x10, 0xae, 0xd4, 0xb3, 0x62, 0xa8, 0xee, 0xc4, 0xbd, 0x7e, 0x30,
	0x26, 0xff, 0x5f, 0xe8, 0x57, 0xa1, 0x36, 0xef, 0x53, 0x66, 0x60, 0xfd, 0xbc, 0x0c, 0x35, 0x21,
	0xf9, 0x8c, 0xd3, 0xe2, 0x31, 0x8e, 0xf1, 0x90, 0x30, 0x12, 0x27, 0x68, 0x0d, 0xca, 0x09, 0x89,
	0xc7, 0x41, 0x8f, 0x74, 0x29, 0x1e, 0x12, 0x11, 0x51, 0xc9, 0xd5, 0x95, 0xec, 0x11, 0x1e, 0x12,
	0x74, 0x03, 0x2e, 0x85, 0x11, 0x91, 0xfd, 0x93, 0x4a, 0x39, 0xa1, 0x54, 0x99, 0x4a, 0x85, 0xda,
	0x0e, 0x2c, 0x33, 0xec, 0x27, 0xc6, 0x92, 0x28, 0xcf, 0x66, 0xa6, 0x3c, 0x67, 0x39, 0xb7, 0xf7,
	0xb1, 0x9f, 0xdc, 0xa3, 0x2c, 0x9e, 0xb8, 0xc2, 0x14, 0x3d, 0x80, 0x4b, 0x09, 0xc3, 0x31, 0xeb,
	0x72, 0x3e, 0x75, 0x87, 0x01, 0x35, 0x96, 0x9b, 0xda, 0x86, 0xde, 0x32, 0x6d, 0xc9, 0x27, 0x3b,
	0xe5, 0x93, 0xbd, 0x9f, 0x12, 0xae, 0x5d, 0xe4, 0xc5, 0xfb, 0xee, 0xcf, 0x86, 0xe6, 0x96, 0x85,
	0x2d, 0x7f, 0x79, 0x18, 0xd0, 0x2c, 0x16, 0x3e, 0x32, 0xf2, 0x2f, 0x87, 0x85, 0x8f, 0xd0, 0x7d,
	0x28, 0xa7, 0x04, 0x16, 0x51, 0xad, 0x08, 0xa4, 0xd7, 0x16, 0x90, 0x76, 0x95, 0x92, 0x04, 0xfa,
	0x91, 0x03, 0xe9, 0xa9, 0x21, 0x8f, 0x69, 0x0e, 0x07, 0x1f, 0x19, 0x85, 0x97, 0xc1, 0xc1, 0x47,
	0xb2, 0x69, 0x38, 0xee, 0xf5, 0xbb, 0x1e, 0x89, 0x58, 0xdf, 0x28, 0x36, 0xb5, 0x8d, 0x3c, 0x6f,
	0x1a, 0x97, 0xed, 0x72, 0x91, 0xf9, 0x1e, 0x94, 0xa6, 0xd5, 0x45, 0xaf, 0xc2, 0xd2, 0x80, 0x4c,
	0x54, 0x6f, 0xf9, 0x11, 0xd5, 0x20, 0x3f, 0xc6, 0x87, 0xa3, 0xb4, 0x95, 0xf2, 0xb2, 0x9d, 0xbb,
	0xa3, 0x59, 0x8f, 0xe0, 0xca, 0xfd, 0x80, 0x7a, 0xa2, 0x5f, 0x49, 0xca, 0xd9, 0xf7, 0x21, 0x2f,
	0xf6, 0x89, 0x80, 0xd0, 0x5b, 0xeb, 0x17, 0x68, 0xae, 0x2b, 0x2d, 0xac, 0x1a, 0xa0, 0x0e, 0x61,
	0x4f, 0x24, 0x9f, 0x52, 0x40, 0xeb, 0x36, 0x54, 0xe7, 0xa4, 0x92, 0xa6, 0xc8, 0x84, 0xa2, 0x62,
	0x9e, 0x1c, 0xb3, 0x92, 0x3b, 0xbd, 0x5b, 0x0f, 0xa1, 0xd6, 0x21, 0xec, 0xd3, 0x94, 0x73, 0xd3,
	0xd8, 0x0c, 0x28, 0x28, 0x1d, 0x95, 0x60, 0x7a, 0x45, 0xd7, 0xa1, 0xc4, 0x27, 0xb1, 0x3b, 0x08,
	0xa8, 0xa7, 0x12, 0x2d, 0x72, 0xc1, 0xc7, 0x01, 0xf5, 0xac, 0x0f, 0xa0, 0x34, 0xc5, 0x42, 0x08,
	0x96, 0x67, 0xd8, 0x2f, 0xce, 0xe7, 0x5b, 0x4f, 0x60, 0x35, 0x13, 0x8c, 0xca, 0xe0, 0xe6, 0xcc,
	0xb0, 0xf0, 0xb1, 0x48, 0xf3, 0xc8, 0x48, 0xd1, 0x1d, 0x80, 0xa9, 0x24, 0x31, 0x72, 0x62, 0x66,
	0x8c, 0x4c, 0x59, 0xa7, 0xf0, 0xee, 0x8c, 0xae, 0xf5, 0x93, 0x06, 0x57, 0x3b, 0x84, 0xed, 0x92,
	0x88, 0x50, 0x8f, 0xd0, 0x5e, 0x70, 0xda, 0xa6, 0xbb, 0x00, 0xa7, 0x9c, 0x57, 0xbd, 0xba, 0x18,
	0xdf, 0x4b, 0x53, 0xbe, 0xa3, 0x0f, 0xa1, 0x48, 0xa8, 0x27, 0x21, 0x72, 0xff, 0x01, 0xa2, 0x40,
	0xa8, 0xc7, 0xe5, 0xd6, 0x01, 0x5c, 0x5b, 0x88, 0x4f, 0x55, 0xa7, 0x03, 0x65, 0x6f, 0x46, 0xae,
	0x56, 0xe9, 0x1b, 0x99, 0xbc, 0xa7, 0xa6, 0x93, 0x4f, 0x02, 0x3a, 0x50, 0x4b, 0x75, 0xce, 0xb0,
	0xf5, 0x4b, 0x1e, 0xca, 0x82, 0x70, 0x8a, 0x42, 0x68, 0x00, 0xc5, 0xf4, 0x3f, 0x02, 0xd5, 0x33,
	0x78, 0x99, 0x3f, 0x0f, 0x73, 0xed, 0x8c, 0xd5, 0x3d, 0xbf, 0xec, 0x2d, 0xf3, 0xdb, 0xdf, 0xff,
	0xf9, 0x21, 0x57, 0x43, 0xc8, 0x11, 0x9b, 0x35, 0x71, 0xbe, 0x4e, 0x77, 0xf6, 0x37, 0x5b, 0x1a,
	0x62, 0x50, 0x9e, 0xdd, 0xb2, 0xc8, 0xca, 0x00, 0x9e, 0xb1, 0xf6, 0xcd, 0xf5, 0x73, 0x75, 0xd4,
	0x9a, 0xbe, 0x2e, 0xdc, 0xae, 0x5a, 0x55, 0x07, 0xcb, 0xe7, 0x19, 0xbf, 0xc8, 0x07, 0x38, 0x9d,
	0x4c, 0xd4, 0xcc, 0xe0, 0x2d, 0x0c, 0xed, 0x45, 0xd2, 0x44, 0xc2, 0x5f, 0xd9, 0x2a, 0x38, 0x72,
	0x77, 0x6c, 0x6b, 0xb7, 0xb6, 0x34, 0xe4, 0x83, 0x3e, 0x33, 0x9c, 0x68, 0x6d, 0xb1, 0x9c, 0x99,
	0x71, 0x36, 0xad, 0xf3, 0x54, 0x54, 0x6e, 0x57, 0x84, 0x2f, 0x1d, 0x95, 0x9c, 0x74, 0xa4, 0x51,
	0x08, 0x95, 0xb9, 0x29, 0x42, 0xeb, 0x8b, 0x38, 0x0b, 0x03, 0x6f, 0xbe, 0x79, 0xbe, 0x92, 0x72,
	0x57, 0x15, 0xee, 0x2a, 0x48, 0x77, 0x4e, 0x67, 0x07, 0x3d, 0x13, 0x5f, 0x12, 0xb3, 0xd4, 0x44,
	0x37, 0x16, 0xd1, 0xce, 0x18, 0x2d, 0xf3, 0xe6, 0x8b, 0xd4, 0x94, 0xdb, 0x55, 0xe1, 0xf6, 0x32,
	0xaa, 0x38, 0xb3, 0x7c, 0x6d, 0x8f, 0xbf, 0xdf, 0x69, 0xa3, 0x7c, 0x6b, 0xe9, 0xb6, 0xbd, 0x75,
	0x2b, 0xa7, 0xe5, 0xe2, 0x77, 0x01, 0x1e, 0x08, 0xbc, 0xe6, 0xce, 0xe3, 0x3d, 0xf4, 0x56, 0x9f,
	0xb1, 0x28, 0xd9, 0x76, 0x9c, 0x17, 0x7c, 0x00, 0x3c, 0x3f, 0xa9, 0x6b, 0xbf, 0x9d, 0xd4, 0xb5,
	0xbf, 0x4e, 0xea, 0xda, 0xaf, 0x7f, 0xd7, 0x35, 0xb8, 0x16, 0x84, 0xf6, 0x9c, 0xa2, 0x0a, 0xef,
	0xf3, 0x15, 0xf9, 0x7b, 0xb0, 0x22, 0x46, 0xf6, 0x9d, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xec,
	0x52, 0xe1, 0x5e, 0x0f, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryServiceClient is the client API for QueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryServiceClient interface {
	GetTrace(ctx context.Context, in *GetTraceRequest, opts ...grpc.CallOption) (QueryService_GetTraceClient, error)
	ArchiveTrace(ctx context.Context, in *ArchiveTraceRequest, opts ...grpc.CallOption) (*ArchiveTraceResponse, error)
	FindTraces(ctx context.Context, in *FindTracesRequest, opts ...grpc.CallOption) (QueryService_FindTracesClient, error)
	GetServices(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*GetServicesResponse, error)
	GetOperations(ctx context.Context, in *GetOperationsRequest, opts ...grpc.CallOption) (*GetOperationsResponse, error)
	GetDependencies(ctx context.Context, in *GetDependenciesRequest, opts ...grpc.CallOption) (*GetDependenciesResponse, error)
}

type queryServiceClient struct {
	cc *grpc.ClientConn
}

func NewQueryServiceClient(cc *grpc.ClientConn) QueryServiceClient {
	return &queryServiceClient{cc}
}

func (c *queryServiceClient) GetTrace(ctx context.Context, in *GetTraceRequest, opts ...grpc.CallOption) (QueryService_GetTraceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueryService_serviceDesc.Streams[0], "/jaeger.api_v2.QueryService/GetTrace", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryServiceGetTraceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QueryService_GetTraceClient interface {
	Recv() (*SpansResponseChunk, error)
	grpc.ClientStream
}

type queryServiceGetTraceClient struct {
	grpc.ClientStream
}

func (x *queryServiceGetTraceClient) Recv() (*SpansResponseChunk, error) {
	m := new(SpansResponseChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryServiceClient) ArchiveTrace(ctx context.Context, in *ArchiveTraceRequest, opts ...grpc.CallOption) (*ArchiveTraceResponse, error) {
	out := new(ArchiveTraceResponse)
	err := c.cc.Invoke(ctx, "/jaeger.api_v2.QueryService/ArchiveTrace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) FindTraces(ctx context.Context, in *FindTracesRequest, opts ...grpc.CallOption) (QueryService_FindTracesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueryService_serviceDesc.Streams[1], "/jaeger.api_v2.QueryService/FindTraces", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryServiceFindTracesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QueryService_FindTracesClient interface {
	Recv() (*SpansResponseChunk, error)
	grpc.ClientStream
}

type queryServiceFindTracesClient struct {
	grpc.ClientStream
}

func (x *queryServiceFindTracesClient) Recv() (*SpansResponseChunk, error) {
	m := new(SpansResponseChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryServiceClient) GetServices(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*GetServicesResponse, error) {
	out := new(GetServicesResponse)
	err := c.cc.Invoke(ctx, "/jaeger.api_v2.QueryService/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) GetOperations(ctx context.Context, in *GetOperationsRequest, opts ...grpc.CallOption) (*GetOperationsResponse, error) {
	out := new(GetOperationsResponse)
	err := c.cc.Invoke(ctx, "/jaeger.api_v2.QueryService/GetOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) GetDependencies(ctx context.Context, in *GetDependenciesRequest, opts ...grpc.CallOption) (*GetDependenciesResponse, error) {
	out := new(GetDependenciesResponse)
	err := c.cc.Invoke(ctx, "/jaeger.api_v2.QueryService/GetDependencies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServiceServer is the server API for QueryService service.
type QueryServiceServer interface {
	GetTrace(*GetTraceRequest, QueryService_GetTraceServer) error
	ArchiveTrace(context.Context, *ArchiveTraceRequest) (*ArchiveTraceResponse, error)
	FindTraces(*FindTracesRequest, QueryService_FindTracesServer) error
	GetServices(context.Context, *GetServicesRequest) (*GetServicesResponse, error)
	GetOperations(context.Context, *GetOperationsRequest) (*GetOperationsResponse, error)
	GetDependencies(context.Context, *GetDependenciesRequest) (*GetDependenciesResponse, error)
}

// UnimplementedQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServiceServer struct {
}

func (*UnimplementedQueryServiceServer) GetTrace(req *GetTraceRequest, srv QueryService_GetTraceServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTrace not implemented")
}
func (*UnimplementedQueryServiceServer) ArchiveTrace(ctx context.Context, req *ArchiveTraceRequest) (*ArchiveTraceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveTrace not implemented")
}
func (*UnimplementedQueryServiceServer) FindTraces(req *FindTracesRequest, srv QueryService_FindTracesServer) error {
	return status.Errorf(codes.Unimplemented, "method FindTraces not implemented")
}
func (*UnimplementedQueryServiceServer) GetServices(ctx context.Context, req *GetServicesRequest) (*GetServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServices not implemented")
}
func (*UnimplementedQueryServiceServer) GetOperations(ctx context.Context, req *GetOperationsRequest) (*GetOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOperations not implemented")
}
func (*UnimplementedQueryServiceServer) GetDependencies(ctx context.Context, req *GetDependenciesRequest) (*GetDependenciesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDependencies not implemented")
}

func RegisterQueryServiceServer(s *grpc.Server, srv QueryServiceServer) {
	s.RegisterService(&_QueryService_serviceDesc, srv)
}

func _QueryService_GetTrace_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTraceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryServiceServer).GetTrace(m, &queryServiceGetTraceServer{stream})
}

type QueryService_GetTraceServer interface {
	Send(*SpansResponseChunk) error
	grpc.ServerStream
}

type queryServiceGetTraceServer struct {
	grpc.ServerStream
}

func (x *queryServiceGetTraceServer) Send(m *SpansResponseChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _QueryService_ArchiveTrace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveTraceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).ArchiveTrace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jaeger.api_v2.QueryService/ArchiveTrace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).ArchiveTrace(ctx, req.(*ArchiveTraceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_FindTraces_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindTracesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryServiceServer).FindTraces(m, &queryServiceFindTracesServer{stream})
}

type QueryService_FindTracesServer interface {
	Send(*SpansResponseChunk) error
	grpc.ServerStream
}

type queryServiceFindTracesServer struct {
	grpc.ServerStream
}

func (x *queryServiceFindTracesServer) Send(m *SpansResponseChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _QueryService_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jaeger.api_v2.QueryService/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).GetServices(ctx, req.(*GetServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_GetOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).GetOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jaeger.api_v2.QueryService/GetOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).GetOperations(ctx, req.(*GetOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_GetDependencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDependenciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).GetDependencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jaeger.api_v2.QueryService/GetDependencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).GetDependencies(ctx, req.(*GetDependenciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jaeger.api_v2.QueryService",
	HandlerType: (*QueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ArchiveTrace",
			Handler:    _QueryService_ArchiveTrace_Handler,
		},
		{
			MethodName: "GetServices",
			Handler:    _QueryService_GetServices_Handler,
		},
		{
			MethodName: "GetOperations",
			Handler:    _QueryService_GetOperations_Handler,
		},
		{
			MethodName: "GetDependencies",
			Handler:    _QueryService_GetDependencies_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTrace",
			Handler:       _QueryService_GetTrace_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FindTraces",
			Handler:       _QueryService_FindTraces_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "query.proto",
}
